function PULSE_RATE_param
S.fh = figure('units','pixels',...
    'position',[500 100 630 440],...
    'menubar','none','Color','black',...
    'name','Pulse_Rate_param',...
    'numbertitle','off',...
    'resize','off');
S.title =  uicontrol('style','text',...
    'unit','pix',...
    'position',[10 370 500 40],...
    'fontsize',22,'HorizontalAlignment','left',...
    'string','Change Heart Rate Alarm Conditions',...
    'Backgroundcolor','black','foregroundcolor','w');
S.UpperlimExp = uicontrol('style','text',...
    'unit','pix',...
    'position',[10 240 600 100],...
    'fontsize',11.5,'Backgroundcolor','black','foregroundcolor','w','HorizontalAlignment','left',...
    'string',{'Duration: Time period for a limit to remain out of range before activating an alarm' ;...
    'Percent Change: The total change of the given value that will activate an alarm';...
    'Upper Limit: The upper bound that a value can reach before activating alarm algorithms';...
    'Lower Limit: The lower bound that a value can reach before activating alarm algorithms'});
S.ulim_t = uicontrol('style','text',...
    'unit','pix',...
    'position',[370 190 140 30],...
    'fontsize',18,'HorizontalAlignment','left',...
    'string','Upper Limit','Backgroundcolor','black','foregroundcolor','w');

S.data(1) =  uicontrol('style','edit',...
    'units','pix',...
    'position',[520 190 40 30],...
    'Backgroundcolor','black','foregroundcolor','w');

S.llim_t = uicontrol('style','text',...
    'unit','pix',...
    'position',[370 130 140 30],...
    'fontsize',18,'HorizontalAlignment','left',...
    'string','Lower Limit' ,'Backgroundcolor','black','foregroundcolor','w');

S.data(2) = uicontrol('style','edit',...
    'units','pix',...
    'position',[520 130 40 30],...
    'Backgroundcolor','black','foregroundcolor','w');

S.chk_period_t = uicontrol('style','text',...
    'unit','pix',...
    'position',[10 190 205 30],...
    'fontsize',18,'HorizontalAlignment','left',...
    'string','Duration (seconds)','Backgroundcolor','black','foregroundcolor','w');

S.data(3) =  uicontrol('style','edit',...
    'units','pix',...
    'position',[235 190 40 30],...
    'Backgroundcolor','black','foregroundcolor','w');

S.percent_change_t = uicontrol('style','text',...
    'unit','pix',...
    'position',[10 130 200 30],...
    'fontsize',18,'HorizontalAlignment','left',...
    'string','Percent Change','Backgroundcolor','black','foregroundcolor','w');

S.data(4) = uicontrol('style','edit',...
    'units','pix',...
    'position',[235 130 40 30],...
    'Backgroundcolor','black','foregroundcolor','w');


S.next = uicontrol('style','push',...
    'units','pix',...
    'position',[480 20 120 30],...
    'HorizontalAlign','left',...
    'string','Next',...
    'fontsize',14,'fontweight','bold',...
    'callback',{@Pulse_rate_next,S});

function Pulse_rate_next(varargin)

Static = varargin{3};  % Get the structure.
Pulse = zeros(1,4);

dp  = evalin('base','dp'); 

for m  = 1:4
    if isnan(str2double(get(Static.data(m),'string')))
        Pulse(m) = -1;
    else
        Pulse(m) = str2double(get(Static.data(m),'string'));
    end
end

if (Pulse(1)<Pulse(2))&&(Pulse(1)~= -1)
    LowOverHigh
    uiwait()
    PULSE_RATE_param
else
    Structure = User_Input_Data();
    Structure.PULSE_RATE.upper_lim = Pulse(1);
    Structure.PULSE_RATE.lower_lim = Pulse(2);
    Structure.PULSE_RATE.duration = Pulse(3);
    Structure.PULSE_RATE.percentC = Pulse(4);
    
    Sending_Data();

    % For loop needed to write successfully
    
    for write = 1:5
        dp.write(Structure);
        pause(.5);
    end
    
    close('Pulse_Rate_param');
    close('Sending_Data');
    uiresume()
end

